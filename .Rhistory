hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
# Visualize dendrogram
plot(hcpc_res_pca, title="Dendrogram for PCA Clustering - Dim 1 vs Dim 2")
plot(hcpc_res, axes = c(1, 3), title="Dendrogram for PCA Clustering - Dim 1 vs Dim 3")
plot(hcpc_res, axes = c(2, 3), title="Dendrogram for PCA Clustering - Dim 2 vs Dim 3")
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = FALSE, main = "Clusters in PCA Space - Dim 1 vs Dim 2")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(1, 3), main = "Clusters in PCA Space - Dim 1 vs Dim 3")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(2, 3), main = "Clusters in PCA Space - Dim 2 vs Dim 3")
# Summarize cluster assignments
table(hcpc_res_pca$data.clust$clust)
library(FactoMineR)
res.pca <- PCA(df[,3:8],quali.sup = 1:2, graph = FALSE)
?PCA
hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
# Visualize dendrogram
plot(hcpc_res_pca, title="Dendrogram for PCA Clustering - Dim 1 vs Dim 2")
plot(hcpc_res_pca, axes = c(1, 3), title="Dendrogram for PCA Clustering - Dim 1 vs Dim 3")
plot(hcpc_res_pca, axes = c(2, 3), title="Dendrogram for PCA Clustering - Dim 2 vs Dim 3")
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = FALSE, main = "Clusters in PCA Space - Dim 1 vs Dim 2")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(1, 3), main = "Clusters in PCA Space - Dim 1 vs Dim 3")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(2, 3), main = "Clusters in PCA Space - Dim 2 vs Dim 3")
# Summarize cluster assignments
table(hcpc_res_pca$data.clust$clust)
View(data)
# clusters MCA
hcpc_res$desc.var
# Visualize clusters in MCA space
fviz_cluster(hcpc_res, repel = TRUE, main = "Clusters in MCA Space")
# Sizes of MCA clusters
table(hcpc_res$data.clust$clust)
# clusters PCA
hcpc_res_pca$desc.var$quanti
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = TRUE, main = "Clusters in PCA Space")
# Sizes of PCA clusters
table(hcpc_res_pca$data.clust$clust)
# Evaluate cluster quality using silhouette scores
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(hcpc_res$data.clust$clust, dist(mca_result$ind$coord))
hcpc_res <- HCPC(mca_result, graph = FALSE)
hcpc_res$call$t$nb.clust
# Visualize dendrogram
plot(hcpc_res, title="Dendrogram for MCA Clustering - Dim 1 vs Dim 2")
plot(hcpc_res, axes = c(1, 3), title="Dendrogram for MCA Clustering - Dim 1 vs Dim 3")
plot(hcpc_res, axes = c(2, 3), title="Dendrogram for MCA Clustering - Dim 2 vs Dim 3")
# Visualize clusters on MCA space
library(factoextra)
fviz_cluster(hcpc_res, repel = FALSE, main = "Clusters in MCA Space - Dim 1 vs Dim 2")
fviz_cluster(hcpc_res, repel = FALSE, axes = c(1, 3), main = "Clusters in MCA Space - Dim 1 vs Dim 3")
fviz_cluster(hcpc_res, repel = FALSE, axes = c(2, 3), main = "Clusters in MCA Space - Dim 2 vs Dim 3")
# Summarize cluster assignments
table(hcpc_res$data.clust$clust)
library(FactoMineR)
res.pca <- PCA(df[,3:8],quali.sup = 1:2, graph = FALSE)
?PCA
hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
# Visualize dendrogram
plot(hcpc_res_pca, title="Dendrogram for PCA Clustering - Dim 1 vs Dim 2")
plot(hcpc_res_pca, axes = c(1, 3), title="Dendrogram for PCA Clustering - Dim 1 vs Dim 3")
plot(hcpc_res_pca, axes = c(2, 3), title="Dendrogram for PCA Clustering - Dim 2 vs Dim 3")
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = FALSE, main = "Clusters in PCA Space - Dim 1 vs Dim 2")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(1, 3), main = "Clusters in PCA Space - Dim 1 vs Dim 3")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(2, 3), main = "Clusters in PCA Space - Dim 2 vs Dim 3")
# Summarize cluster assignments
table(hcpc_res_pca$data.clust$clust)
library(FactoMineR)
res.pca <- PCA(df[,3:8],quali.sup = 1:2, graph = FALSE)
?PCA
hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
# Visualize dendrogram
plot(hcpc_res_pca, title="Dendrogram for PCA Clustering - Dim 1 vs Dim 2")
plot(hcpc_res_pca, axes = c(1, 3), title="Dendrogram for PCA Clustering - Dim 1 vs Dim 3")
plot(hcpc_res_pca, axes = c(2, 3), title="Dendrogram for PCA Clustering - Dim 2 vs Dim 3")
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = FALSE, main = "Clusters in PCA Space - Dim 1 vs Dim 2")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(1, 3), main = "Clusters in PCA Space - Dim 1 vs Dim 3")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(2, 3), main = "Clusters in PCA Space - Dim 2 vs Dim 3")
# Summarize cluster assignments
table(hcpc_res_pca$data.clust$clust)
# clusters MCA
hcpc_res$desc.var
# clusters PCA
hcpc_res_pca$desc.var$quanti
# clusters PCA
hcpc_res_pca$desc.var$quanti
hcpc_res <- HCPC(mca_result, graph = FALSE)
hcpc_res$call$t$nb.clust
library(FactoMineR)
res.pca <- PCA(data[,3:8], graph = FALSE)
hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
table(hcpc_res_pca$data.clust$clust)
# clusters MCA
hcpc_res$desc.var
# clusters PCA
hcpc_res_pca$desc.var$quanti
# clusters PCA
hcpc_res_pca$desc.var$quanti
# clusters PCA
hcpc_res_pca$desc.var$quanti
library(FactoMineR)
res.pca <- PCA(df[,3:8],quali.sup = 1:2, graph = FALSE)
?PCA
hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
# Visualize dendrogram
plot(hcpc_res_pca, title="Dendrogram for PCA Clustering - Dim 1 vs Dim 2")
plot(hcpc_res_pca, axes = c(1, 3), title="Dendrogram for PCA Clustering - Dim 1 vs Dim 3")
plot(hcpc_res_pca, axes = c(2, 3), title="Dendrogram for PCA Clustering - Dim 2 vs Dim 3")
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = FALSE, main = "Clusters in PCA Space - Dim 1 vs Dim 2")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(1, 3), main = "Clusters in PCA Space - Dim 1 vs Dim 3")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(2, 3), main = "Clusters in PCA Space - Dim 2 vs Dim 3")
# Summarize cluster assignments
table(hcpc_res_pca$data.clust$clust)
# Evaluate cluster quality using silhouette scores
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(hcpc_res$data.clust$clust, dist(mca_result$ind$coord))
# Evaluate cluster quality using silhouette scores
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(as.numeric(hcpc_res$data.clust$clust), dist(mca_result$ind$coord))
fviz_silhouette(sil_mca, main = "Silhouette Plot for MCA Clustering")
# Silhouette for PCA
sil_pca <- silhouette(hcpc_res_pca$data.clust$clust, dist(res.pca$ind$coord))
# Evaluate cluster quality using silhouette scores
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(as.numeric(hcpc_res$data.clust$clust), dist(mca_result$ind$coord))
fviz_silhouette(sil_mca, main = "Silhouette Plot for MCA Clustering")
# Silhouette for PCA
sil_pca <- silhouette(as.numeric(hcpc_res_pca$data.clust$clust), dist(res.pca$ind$coord))
fviz_silhouette(sil_pca, main = "Silhouette Plot for PCA Clustering")
# Additional comparison: Variable contributions
# Contributions of categories in MCA
fviz_mca_var(hcpc_res, repel = TRUE, main = "Contributions of Variables in MCA Clustering")
sil_pca
summary(sil_mca)
library(FactoMineR)
res.pca <- PCA(data[,3:8], quali.sup = 1:2, graph = FALSE)
hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
# Visualize dendrogram
fviz_dend(hcpc_res_pca, rect = TRUE, rect_fill = TRUE, main = "Dendrogram for PCA Clusters")
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = TRUE, main = "Clusters in PCA Space")
# Summarize cluster assignments
table(hcpc_res_pca$data.clust$clust)
# clusters MCA
hcpc_res$desc.var
# Visualize clusters in MCA space
fviz_cluster(hcpc_res, repel = TRUE, main = "Clusters in MCA Space")
# Sizes of MCA clusters
table(hcpc_res$data.clust$clust)
# clusters PCA
hcpc_res_pca$desc.var$quanti
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = TRUE, main = "Clusters in PCA Space")
# Sizes of PCA clusters
table(hcpc_res_pca$data.clust$clust)
# Evaluate cluster quality using silhouette scores
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(as.numeric(hcpc_res$data.clust$clust), dist(mca_result$ind$coord))
fviz_silhouette(sil_mca, main = "Silhouette Plot for MCA Clustering")
summary(sil_mca)
# Silhouette for PCA
sil_pca <- silhouette(as.numeric(hcpc_res_pca$data.clust$clust), dist(res.pca$ind$coord))
summary(sil_pca)
fviz_silhouette(sil_pca, main = "Silhouette Plot for PCA Clustering")
# Additional comparison: Variable contributions
# Contributions of categories in MCA
fviz_mca_var(hcpc_res, repel = TRUE, main = "Contributions of Variables in MCA Clustering")
# Evaluate cluster quality using silhouette scores
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(as.numeric(hcpc_res$data.clust$clust), dist(mca_result$ind$coord))
fviz_silhouette(sil_mca, main = "Silhouette Plot for MCA Clustering")
summary(sil_mca)
# Silhouette for PCA
sil_pca <- silhouette(as.numeric(hcpc_res_pca$data.clust$clust), dist(res.pca$ind$coord))
summary(sil_pca)
fviz_silhouette(sil_pca, main = "Silhouette Plot for PCA Clustering")
# Additional comparison: Variable contributions
# Contributions of categories in MCA
fviz_mca_var(mca_result, repel = TRUE, main = "Contributions of Variables in MCA Clustering")
# Evaluate cluster quality using silhouette scores
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(as.numeric(hcpc_res$data.clust$clust), dist(mca_result$ind$coord))
fviz_silhouette(sil_mca, main = "Silhouette Plot for MCA Clustering")
summary(sil_mca)
# Silhouette for PCA
sil_pca <- silhouette(as.numeric(hcpc_res_pca$data.clust$clust), dist(res.pca$ind$coord))
summary(sil_pca)
fviz_silhouette(sil_pca, main = "Silhouette Plot for PCA Clustering")
# Additional comparison: Variable contributions
# Contributions of categories in MCA
fviz_mca_var(mca_result, repel = TRUE)
# Contributions of numerical variables in PCA
fviz_pca_var(res.pca, col.var = "contrib", gradient.cols = c("blue", "orange", "red"))
# Evaluate cluster quality using silhouette scores
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(as.numeric(hcpc_res$data.clust$clust), dist(mca_result$ind$coord))
fviz_silhouette(sil_mca, main = "Silhouette Plot for MCA Clustering")
summary(sil_mca)
# Silhouette for PCA
sil_pca <- silhouette(as.numeric(hcpc_res_pca$data.clust$clust), dist(res.pca$ind$coord))
summary(sil_pca)
fviz_silhouette(sil_pca, main = "Silhouette Plot for PCA Clustering")
# Additional comparison: Variable contributions
# Contributions of categories in MCA
fviz_mca_var(mca_result, repel = TRUE)
# Contributions of numerical variables in PCA
fviz_pca_var(res.pca, col.var = "contrib", gradient.cols = c("blue", "orange", "red"))
###############################################################
######                                                   ######
###### R SCRIPT: Cluster Analysis                        ######
######                                                   ######
######           Nihan Acar-Denizli, PhD                 ######
######                                                   ######
###############################################################
###############################
###### USAarrests Data ########
###############################
# Distance matrix of scaled variables
usa<-scale(USArrests)
str(usa)
usa<-as.data.frame(usa)
d <- dist(usa, method = "euclidean")
#d<-dist(USArrests, method="euclidean") #alternatively taking distance matrix on unscaled variables
?hclust
fit <- hclust(d, method="single")
plot(fit,main="Dendrogram of Single Linkage") # Dendogram
fit1 <- hclust(d, method="complete")
plot(fit1,main="Dendrogram of complete Linkage") # Dendogram
fit2 <- hclust(d, method="average")
plot(fit2,main="Dendrogram of Average Linkage") # Dendogram
fit3 <- hclust(d, method="ward.D2")
plot(fit3,main="Dendrogram of Ward Method") # Dendogram
fit4 <- hclust(d, method="centroid")
plot(fit4,main="Dendrogram of Centroid Method") # Dendogram
### Highlighting Groups ###
fit1 <- hclust(d, method="complete")
plot(fit1,main="Dendrogram of complete Linkage")
groups <- cutree(fit1, k=2 )# c
rect.hclust(fit1, k=2, border="green")
groups <- cutree(fit1, k=4 )# c
rect.hclust(fit1, k=4, border="blue")
groups <- cutree(fit1, k=5 )# c
rect.hclust(fit1, k=5, border="red")
#######################################
### Determining Number of Clusters ####
#######################################
####### 1.TWSS Elbow Graph #########
## Applying kmeans algorithm for different number of clusters ##
aux<-c()
for (i in 2:6){
k<-kmeans(usa,centers=i,nstart=25)
aux[i-1]<-k$tot.withinss
}
plot(2:6, aux, xlab="Number of Clusters", ylab="TWSS", type="l", main="TWSS vs. number of clusters")
k4 <- kmeans(usa, centers = 4, nstart = 25)
str(k4)
names(k4)
### Sum of Squares ####
k4$withinss
k4$totss
k4$tot.withinss
k4$betweenss + k4$tot.withinss
k4$betweenss/k4$totss # as it gets closer to 1 better.
#### 2. Pseudo F Index #########
aux<-c()
for (i in 2:20){
k<-kmeans(usa,centers=i,nstart=25)
aux[i-1]<-((k$betweenss)*(nrow(usa)-i))/((k$tot.withinss)*(i-1))
}
plot(2:20,aux, xlab="Number of Clusters", ylab="Pseudo-F", type="l", main="Pseudo F Index")
which.max(aux)
#### 3. Silhoutte Index ######
## 3a. silhouette function from cluster library
library(cluster)
?silhouette
## Using plot function
si<-silhouette(k4$cluster,d)
plot(si)
## 3b. sil function from kmed library
install.packages("kmed")
library(kmed)
?sil
## k-medoid algorithm
?fastkmed
res <- fastkmed(d, 5)
silhouette <- sil(d, res$medoid, res$cluster)
silhouette$result
silhouette$plot
install.packages("kmed")
### Using HCPC function for Hierarchical Clustering ###
library(FactoMineR)
?HCPC
# Compute PCA with ncp = 3
res.pca <- PCA(USArrests, ncp = 2, graph = FALSE)
# Compute hierarchical clustering on principal components
res.hcpc <- HCPC(res.pca, graph = FALSE)
names(res.hcpc)
res.hcpc$data.clust
# Dendrogram using fviz_dend
library(factoextra)
fviz_dend(res.hcpc, rect = TRUE, rect_fill = TRUE)
## 3D plot ##
plot(res.hcpc, choice = "3D.map")
# Visualization of Clusters
fviz_cluster(res.hcpc, repel = TRUE, show.clust.cent = TRUE,main = "Factor map")
#######################################
### Determining Number of Clusters ####
#######################################
####### 1.TWSS Elbow Graph #########
## Applying kmeans algorithm for different number of clusters ##
aux<-c()
for (i in 2:6){
k<-kmeans(usa,centers=i,nstart=25)
aux[i-1]<-k$tot.withinss
}
plot(2:6, aux, xlab="Number of Clusters", ylab="TWSS", type="l", main="TWSS vs. number of clusters")
k4 <- kmeans(usa, centers = 4, nstart = 25)
str(k4)
names(k4)
### Sum of Squares ####
k4$withinss
k4$totss
k4$tot.withinss
k4$betweenss + k4$tot.withinss
k4$betweenss/k4$totss # as it gets closer to 1 better.
#### 2. Pseudo F Index #########
aux<-c()
for (i in 2:20){
k<-kmeans(usa,centers=i,nstart=25)
aux[i-1]<-((k$betweenss)*(nrow(usa)-i))/((k$tot.withinss)*(i-1))
}
plot(2:20,aux, xlab="Number of Clusters", ylab="Pseudo-F", type="l", main="Pseudo F Index")
which.max(aux)
#### 3. Silhoutte Index ######
## 3a. silhouette function from cluster library
library(cluster)
?silhouette
## Using plot function
si<-silhouette(k4$cluster,d)
plot(si)
## 3b. sil function from kmed library
install.packages("kmed")
library(kmed)
?sil
## k-medoid algorithm
?fastkmed
res <- fastkmed(d, 5)
silhouette <- sil(d, res$medoid, res$cluster)
silhouette$result
silhouette$plot
install.packages("kmed")
aux<-c()
for (i in 2:6){
k<-kmeans(usa,centers=i,nstart=25)
aux[i-1]<-k$tot.withinss
}
plot(2:6, aux, xlab="Number of Clusters", ylab="TWSS", type="l", main="TWSS vs. number of clusters")
k4 <- kmeans(usa, centers = 4, nstart = 25)
str(k4)
names(k4)
### Sum of Squares ####
k4$withinss
k4$totss
k4$tot.withinss
k4$betweenss + k4$tot.withinss
k4$betweenss/k4$totss # as it gets closer to 1 better.
#### 2. Pseudo F Index #########
aux<-c()
for (i in 2:20){
k<-kmeans(usa,centers=i,nstart=25)
aux[i-1]<-((k$betweenss)*(nrow(usa)-i))/((k$tot.withinss)*(i-1))
}
plot(2:20,aux, xlab="Number of Clusters", ylab="Pseudo-F", type="l", main="Pseudo F Index")
which.max(aux)
#### 3. Silhoutte Index ######
## 3a. silhouette function from cluster library
library(cluster)
library(kmed)
#### 3. Silhoutte Index ######
## 3a. silhouette function from cluster library
library(cluster)
?silhouette
## Using plot function
si<-silhouette(k4$cluster,d)
plot(si)
## 3b. sil function from kmed library
install.packages("kmed")
library(kmed)
?sil
## k-medoid algorithm
?fastkmed
res <- fastkmed(d, 5)
silhouette <- sil(d, res$medoid, res$cluster)
silhouette$result
silhouette$plot
install.packages("kmed")
knitr::opts_chunk$set(echo = TRUE)
library(readr)
data <- read_csv("Wholesale customers data.csv")
data<-data.frame(data)
head(data)
str(data)
dim(data)
data$Channel<-as.factor(data$Channel)
data$Region<-as.factor(data$Region)
str(data)
summary(data)
boxplot(data[,3:8])
attach(data)
data$f_Frech<-as.factor(ifelse(Fresh>8504,"High_fresh","Low_Fresh"))
data$f_Milk<-as.factor(ifelse(Milk>3627,"Hihh_Milk","Low_Milk"))
data$f_Grocery<-as.factor(ifelse(Grocery>4756,"High_Grocery","Low_Grocery"))
data$f_Frozen<-as.factor(ifelse(Frozen>1526,"High_Frozen","Low_Frozen"))
data$f_Detergents_Paper<-as.factor(ifelse(Detergents_Paper>816.5,"High_Detergantes_Paper","Low_Detergantes_Paper"))
data$f_Delicassen<-as.factor(ifelse(Delicassen>965.5,"High_Delicassen","Low_Delicassen"))
head(data)
str(data)
library(FactoMineR)
data_mca<-data[,c(1:2,9:14)]
mca_result <- MCA(data_mca,quali.sup = 1:2, graph = FALSE)
summary(mca_result)
plot.MCA(mca_result, invisible = "ind", cex = 1.2)
hcpc_res <- HCPC(mca_result, graph = FALSE)
hcpc_res$call$t$nb.clust
library(FactoMineR)
data_pca<-data[,1:8]
res.pca <- PCA(data_pca,quali.sup = 1:2, graph = FALSE)
hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
# clusters MCA
hcpc_res$desc.var
# clusters PCA
hcpc_res_pca$desc.var$quanti
# Evaluate cluster quality using silhouette scores
library(factoextra)
library(FactoMineR)
library(cluster)
# Silhouette for MCA
sil_mca <- silhouette(as.numeric(hcpc_res$data.clust$clust), dist(mca_result$ind$coord))
fviz_silhouette(sil_mca, main = "Silhouette Plot for MCA Clustering")
summary(sil_mca)
# Silhouette for PCA
sil_pca <- silhouette(as.numeric(hcpc_res_pca$data.clust$clust), dist(res.pca$ind$coord))
summary(sil_pca)
fviz_silhouette(sil_pca, main = "Silhouette Plot for PCA Clustering")
mean_silhouette_mca <- mean(sil_mca[, 3])
mean_silhouette_pca <- mean(sil_pca[, 3])
cat("mean of Silueta - MCA:", mean_silhouette_mca, "\n")
cat("mean of Silueta - PCA:", mean_silhouette_pca, "\n")
# clusters MCA
hcpc_res$desc.var
# clusters PCA
hcpc_res_pca$desc.var$quanti
# clusters PCA
hcpc_res_pca$desc.var$quanti
# clusters PCA
hcpc_res_pca$desc.var$quanti
library(FactoMineR)
res.pca <- PCA(df[,3:8],quali.sup = 1:2, graph = FALSE)
?PCA
hcpc_res_pca <- HCPC(res.pca, graph = FALSE)
hcpc_res_pca$call$t$nb.clust
# Visualize dendrogram
plot(hcpc_res_pca, title="Dendrogram for PCA Clustering - Dim 1 vs Dim 2")
plot(hcpc_res_pca, axes = c(1, 3), title="Dendrogram for PCA Clustering - Dim 1 vs Dim 3")
plot(hcpc_res_pca, axes = c(2, 3), title="Dendrogram for PCA Clustering - Dim 2 vs Dim 3")
# Visualize clusters in PCA space
fviz_cluster(hcpc_res_pca, repel = FALSE, main = "Clusters in PCA Space - Dim 1 vs Dim 2")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(1, 3), main = "Clusters in PCA Space - Dim 1 vs Dim 3")
fviz_cluster(hcpc_res_pca, repel = FALSE, axes = c(2, 3), main = "Clusters in PCA Space - Dim 2 vs Dim 3")
# Summarize cluster assignments
table(hcpc_res_pca$data.clust$clust)
# clusters MCA
hcpc_res$desc.var
mean_silhouette_mca <- mean(sil_mca[, 3])
mean_silhouette_pca <- mean(sil_pca[, 3])
cat("mean of Silueta - MCA:", mean_silhouette_mca, "\n")
cat("mean of Silueta - PCA:", mean_silhouette_pca, "\n")
# Evaluate cluster quality using silhouette scores
library(cluster)
library(factoextra)
library(FactoMineR)
# Silhouette for MCA
sil_mca <- silhouette(as.numeric(hcpc_res$data.clust$clust), dist(mca_result$ind$coord))
fviz_silhouette(sil_mca, main = "Silhouette Plot for MCA Clustering")
summary(sil_mca)
# Silhouette for PCA
sil_pca <- silhouette(as.numeric(hcpc_res_pca$data.clust$clust), dist(res.pca$ind$coord))
fviz_silhouette(sil_pca, main = "Silhouette Plot for PCA Clustering")
summary(sil_pca)
mean_silhouette_mca <- mean(sil_mca[, 3])
mean_silhouette_pca <- mean(sil_pca[, 3])
cat("mean of Silueta - MCA:", mean_silhouette_mca, "\n")
cat("mean of Silueta - PCA:", mean_silhouette_pca, "\n")
